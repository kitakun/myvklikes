@model Kitakun.VkModules.Web.WebModels.HomeModel

@{
    Layout = "../Shared/_Layout";
}

@using AdminTitleChangerComponent = Kitakun.VkModules.Web.Components.AdminTitleChangerComponent;
@using AdminListSetuperComponent = Kitakun.VkModules.Web.Components.AdminListSetuperComponent;
@using Top100BestLikersComponent = Kitakun.VkModules.Web.Components.Top100BestLikersComponent;

<div id="message"> </div>

<div class="page-block">
    <h2>Лучше лайкатели</h2>
</div>

@if (Model.IsAdmin && Model.HasSubscription)
{
    <div class="tabs-block">
        <button class="tablink s4" onclick="openPage('Home', this)" id="defaultOpen">Лучшие</button>
        <button class="tablink s4" onclick="openPage('adm', this)">Настройки виджета</button>
        <button class="tablink s4" onclick="openPage('adm2', this)">Настройки</button>
    </div>

    <div id="adm" class="tabcontent">

        <div class="example">
            <p>Перед обновлением виджета убедитесь, что все автообновления отключены!</p>
            <p>Иначе спустя некоторое время виджет сам поменяется.</p>
        </div>

        <div class="example">
            <div>Перерасчет происходит 1 раз в день при первом открытии этого фрейма ИЛИ по нажатию кнопку "пересчет"</div>
            <button id="forceReload">Пересчет</button>
        </div>

        <div class="admin-panel">

            @(await Component.InvokeAsync<Kitakun.VkModules.Web.Components.Top100BestLikersAdminComponent>())

            @(await Component.InvokeAsync<Kitakun.VkModules.Web.Components.Top5BestLikersTableAdminComponent>())

            @await Component.InvokeAsync(nameof(AdminTitleChangerComponent))

            @await Component.InvokeAsync(nameof(AdminListSetuperComponent))

        </div>
    </div>

    <div id="adm2" class="tabcontent">
        <div class="admin-panel">
            @(await Component.InvokeAsync<Kitakun.VkModules.Web.Components.AdminSettingsComponent>())
        </div>
    </div>
}

@if (Model.HasSubscription)
{
    @if (Model.IsAdmin)
    {
        <div id="Home" class="tabcontent">
            @await Component.InvokeAsync(nameof(Top100BestLikersComponent))
        </div>
    }
    else
    {
        @await Component.InvokeAsync(nameof(Top100BestLikersComponent))
    }
}
else
{
    @if (Model.IsAdmin)
    {
        <div class="admin-panel center">
            <p>У вас нет подписки или она закончилась :с</p>
            <p>Свяжитесь с администратором виджета</p>
        </div>
    }
    else
    {
        <div class="page-block">
            <p>Понравился виджет?</p>
            <p>Можем легко подключать вам такой же</p>
            <p>Если интересно, пишите!</p>
        </div>
    }
}

<div id="loadingmodal" class="loading-modal">
    <img style="width:32px; height: 32px" src="~/wwwroot/img/light-loader.gif" />
</div>


@section Style {
    <style>
        .admin-panel {
            top: 10px;
            position: relative;
            padding: 2px;
            margin: 2px;
        }

        .s6 {
            width: calc(50% - 2px);
        }

        .s4 {
            width: calc(33% - 2px);
        }

        .tabs-block {
            display: inline-block;
            width: 100%;
        }

        .tablink {
            text-align: center;
            text-decoration: none;
            background: none;
            background-color: #5181b8;
            color: #fff;
            border: 0;
            display: inline-block;
            border-radius: 4px;
            padding: 7px 16px 8px;
            outline: none;
            cursor: pointer;
            padding: 14px 16px;
            font-size: 17px;
        }

            .tablink:hover {
                background-color: #5b88bd;
                text-decoration: none;
            }

        .tabcontent {
            display: none;
            height: 100%;
        }

        .loading-modal {
            display: none;
            position: fixed;
            top: calc(50% - 32px);
            left: calc(50% - 32px);
            bottom: 0;
            z-index: 9000;
        }

            .loading-modal.is-active {
                display: block;
            }

        .overlay {
            position: fixed;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            height: 100%;
            width: 100%;
            z-index: 8000;
            background-color: rgba(0, 0, 0, 0.5);
        }
    </style>
}

<script type="text/javascript">
    function openPage(pageName, elmnt) {
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }

        tablinks = document.getElementsByClassName("tablink");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].style.backgroundColor = "";
        }

        document.getElementById(pageName).style.display = "block";
        elmnt.style.backgroundColor = '#4872a3';
    }

    function loadingBeforeReloading() {
        var overlay = document.createElement('div');
        overlay.className = 'overlay';
        var body = document.querySelector('body');
        body.appendChild(overlay);

        var modal = document.getElementById('loadingmodal');
        modal.classList.add('is-active');
    }

    document.getElementById("defaultOpen").click();
    window.allcustombinds.push(function () {
        document.getElementById('forceReload').addEventListener('click', function () {

            loadingBeforeReloading();

            var url = window.location.href;
            if (url.indexOf('?') > -1) {
                url += '&recalc'
            } else {
                url += '?recalc'
            }
            window.location.href = url;
        });
    });
</script>